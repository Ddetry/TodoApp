{"ast":null,"code":"var _jsxFileName = \"/Users/damien/Documents/Sinf/myapp/react-to-do/src/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport db from './firebase';\nimport './Todo.css';\nimport { List, ListItem, ListItemText, Button, Modal } from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction Todo(props) {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handelOpen = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: e => setOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" open \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => setOpen(false),\n          children: \" Update Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: \"todo_list\",\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: props.todo.todo,\n          secondary: \"deadline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => setOpen(true),\n        children: \" Edit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n        onClick: event => db.collection('todos').doc(props.todo.id).delete()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Todo, \"TsAExMDA6yuxA58uE+YzDgG8Jdg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/damien/Documents/Sinf/myapp/react-to-do/src/Todo.js"],"names":["React","useState","db","List","ListItem","ListItemText","Button","Modal","DeleteForeverIcon","makeStyles","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","classes","open","setOpen","handelOpen","e","todo","event","collection","doc","id","delete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAO,YAAP;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,YAAzB,EAAuCC,MAAvC,EAA+CC,KAA/C,QAA2D,mBAA3D;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AAEA,SAAQC,UAAR,QAAyB,0BAAzB;;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,UADL;AAELC,IAAAA,KAAK,EAAE,GAFF;AAGLC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBL,KAHrC;AAILM,IAAAA,MAAM,EAAE,gBAJH;AAKLC,IAAAA,SAAS,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CALN;AAMLC,IAAAA,OAAO,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AANJ;AADgC,CAAZ,CAAD,CAA5B;;AAWA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA;;AAClB,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAM2B,UAAU,GAAG,MAAM;AACvBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA,4BACA,QAAC,KAAD;AACE,MAAA,IAAI,EAAID,IADV;AAEE,MAAA,OAAO,EAAIG,CAAC,IAAIF,OAAO,CAAC,KAAD,CAFzB;AAAA,6BAIE;AAAK,QAAA,SAAS,EAAIF,OAAO,CAACb,KAA1B;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAIiB,CAAC,IAAIF,OAAO,CAAC,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADA,eAaA,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,8BACE,QAAC,QAAD;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEH,KAAK,CAACM,IAAN,CAAWA,IAAlC;AAAwC,UAAA,SAAS,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,OAAO,EAAID,CAAC,IAAIF,OAAO,CAAC,IAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,iBAAD;AAAmB,QAAA,OAAO,EAAII,KAAK,IAAI7B,EAAE,CAAC8B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BT,KAAK,CAACM,IAAN,CAAWI,EAAtC,EAA0CC,MAA1C;AAAvC;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbA;AAAA,kBADF;AAuBD;;GA/BQZ,I;UACSb,S;;;KADTa,I;AAiCT,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react';\nimport db from './firebase';\n\nimport './Todo.css';\nimport { List, ListItem, ListItemText, Button, Modal} from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction Todo(props){\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handelOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <>\n    <Modal\n      open = {open}\n      onClose = {e => setOpen(false)}\n    >\n      <div className = {classes.paper}>\n        <h1> open </h1>\n        <button onClick = {e => setOpen(false)}> Update Todo</button>\n      </div>\n\n    </Modal>\n\n\n    <List className='todo_list'>\n      <ListItem>\n        <ListItemText primary={props.todo.todo} secondary=\"deadline\"/>\n      </ListItem>\n      <button onClick = {e => setOpen(true)}> Edit </button>\n      <DeleteForeverIcon onClick= { event => db.collection('todos').doc(props.todo.id).delete() }/>\n    </List>\n    </>\n  )\n}\n\nexport default Todo\n"]},"metadata":{},"sourceType":"module"}