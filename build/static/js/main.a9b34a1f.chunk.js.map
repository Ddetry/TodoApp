{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","classes","useState","open","setOpen","input","setInput","Modal","onClose","e","className","placeholder","todo","value","onChange","event","target","Button","onClick","collection","doc","id","set","merge","List","ListItem","ListItemText","primary","secondary","delete","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","Input","disabled","variant","color","type","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9b34a1f.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyD70SjpBRjx2fUmJWj1KlTVQAbq5B-cr9M\",\n    authDomain: \"todoapp-9f91f.firebaseapp.com\",\n    projectId: \"todoapp-9f91f\",\n    storageBucket: \"todoapp-9f91f.appspot.com\",\n    messagingSenderId: \"430357717980\",\n    appId: \"1:430357717980:web:8e4cd7e06e0be055342519\",\n    measurementId: \"G-73Z96TBWZE\"\n});\n\nconst db = firebaseApp.firestore();\n\nexport default db;\n","import React, {useState} from 'react';\nimport db from './firebase';\n\nimport './Todo.css';\nimport { List, ListItem, ListItemText, Button, Modal} from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction Todo(props){\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [input, setInput] = useState('');\n\n  const handelOpen = () => {\n    setOpen(true);\n  };\n\n  const updateTodo = () => {\n    db.collection('todos').doc(props.todo.id).set({\n      todo : input\n    }, {merge : true})\n    setOpen(false);\n  }\n\n  return (\n    <>\n    <Modal\n      open = {open}\n      onClose = {e => setOpen(false)}\n    >\n      <div className = {classes.paper}>\n        <h1> Update the Todo </h1>\n        <input placeholder = {props.todo.todo} value={input} onChange={event => setInput(event.target.value)} />\n        <Button onClick = {updateTodo}> Update Todo</Button>\n      </div>\n    </Modal>\n\n    <List className='todo_list'>\n      <ListItem>\n        <ListItemText primary={props.todo.todo} secondary=\"deadline\"/>\n      </ListItem>\n      <button onClick = {e => setOpen(true)}> Edit </button>\n      <DeleteForeverIcon onClick= { event => db.collection('todos').doc(props.todo.id).delete() }/>\n    </List>\n\n    </>\n  )\n}\n\nexport default Todo\n","import db from './firebase';\nimport React, {useState, useEffect} from 'react';\nimport Todo from './Todo';\nimport { Button , FormControl, Input, InputLabel} from '@material-ui/core';\nimport './App.css';\nimport firebase from 'firebase';\n\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState('');\n\n  useEffect(() => {\n    //fires when the app loads\n    db.collection('todos').orderBy('timestamp', 'desc').onSnapshot(snapshot => { //when something change in the database\n      setTodos(snapshot.docs.map(doc => ({id: doc.id, todo : doc.data().todo}))) //return a flat array of strings\n    })\n  }, []);\n\n  const addTodo = (event) => {\n    event.preventDefault(); //stop the refresh\n    db.collection('todos').add({\n      todo: input,\n      timestamp : firebase.firestore.FieldValue.serverTimestamp()\n    })\n    //setTodos([...todos, input]) //copy the entire array of todo and append\n    setInput('');\n  }\n\n  return (\n    <div className=\"App\">\n      <h1> My To-Do App </h1>\n\n      <form>\n        <FormControl>\n          <InputLabel> Write a Todo </InputLabel>\n          <Input value = {input} onChange = {event => setInput(event.target.value)} />\n        </FormControl>\n\n        <Button disabled = {!input} variant=\"contained\" color=\"primary\" type = \"submit\" onClick = {addTodo} >\n          Add Todo\n        </Button>\n      </form>\n\n      <ul>\n        {todos.map(todo => (\n          <Todo todo = {todo}/>\n        ))}\n      </ul>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}